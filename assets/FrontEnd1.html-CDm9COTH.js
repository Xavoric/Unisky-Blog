import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as r,c as d,a as t,b as e,d as s,e as i}from"./app-DrMrOvds.js";const c={},o=t("h1",{id:"前端基础知识-html",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#前端基础知识-html"},[t("span",null,"前端基础知识-HTML")])],-1),p=t("p",null,"主要是前端开发的一些基础知识的整理,本部分着重在HTML和HTTP方向",-1),h={href:"https://www.w3schools.com/html/default.asp",target:"_blank",rel:"noopener noreferrer"},g=i(`<h2 id="_1-html与xhtml" tabindex="-1"><a class="header-anchor" href="#_1-html与xhtml"><span>1.HTML与XHTML</span></a></h2><p>HTML是超文本标记语言（Hyper Text Markup Language）,通过一系列标签统一网络文档格式</p><p>XHTML是可扩展超文本标记语言（eXtensible HyperText Markup Language），基于XML和HTML发展而来的新兴网络设计语言。</p><p>从书写习惯上来说，XHTML有更严格的要求，元素必须严格闭合、嵌套、区分大小写，文档必须拥有根元素 从功能上来说，XHTML可以更好地兼容各大浏览器，手机和PDA，浏览器也能更快地编译网页</p><h2 id="_2-html语义化是什么" tabindex="-1"><a class="header-anchor" href="#_2-html语义化是什么"><span>2. HTML语义化是什么</span></a></h2><p>根据内容的结构化来确定代码标签的语义化，不一定会影响最终结果，主要是影响代码书写。 主要目的是更好地明确HTML节点层次、嵌套关系，从而提高代码的可读性</p><p>对比如下</p><div class="language-HTML line-numbers-mode" data-ext="HTML" data-title="HTML"><pre class="language-HTML"><code>&lt;!--语义化的HTML代码--&gt;
&lt;header&gt;
      &lt;h1&gt;&lt;/h1&gt;
&lt;/header&gt;
&lt;section&gt;&lt;/section&gt;
&lt;footer&gt;&lt;/footer&gt;

&lt;!--非语义化的--&gt;
&lt;div&gt;
     &lt;span style=&quot;font-size:16px;font-weight:bold;&quot;&gt;&lt;/span&gt;
&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-标签上的-title-与-alt-属性" tabindex="-1"><a class="header-anchor" href="#_3-标签上的-title-与-alt-属性"><span>3.标签上的 title 与 alt 属性</span></a></h2><p>alt属性的值是在浏览器未显示图像时的代替文本 title属性的值是注释，页面中将鼠标悬停至图片上时可以看到</p><h2 id="_4-优雅降级-graceful-degradation-与渐进增强-progressive-enhancement" tabindex="-1"><a class="header-anchor" href="#_4-优雅降级-graceful-degradation-与渐进增强-progressive-enhancement"><span>4.优雅降级（Graceful Degradation）与渐进增强（Progressive Enhancement）</span></a></h2><p>优雅降级：从针对高级浏览器设计逐渐向下兼容 渐进增强：从低级浏览器向上针对高级浏览器设计</p><h2 id="_5-http的请求方法" tabindex="-1"><a class="header-anchor" href="#_5-http的请求方法"><span>5.HTTP的请求方法</span></a></h2><ul><li>GET：发送一个请求来取得服务器上的某一资源</li><li>POST：向URL指定的资源提交数据或附加新的数据</li><li>PUT：跟POST方法很像，也是想服务器提交数据。但是，它们之间有不同。PUT指定了资源在服务器上的位置，而POST没有</li><li>HEAD：只请求页面的首部</li><li>DELETE：删除服务器上的某资源</li><li>OPTIONS：它用于获取当前URL所支持的方法。如果请求成功，会有一个Allow的头包含类似“GET,POST”这样的信息</li><li>TRACE：TRACE方法被用于激发一个远程的，应用层的请求消息回路</li><li>CONNECT：把请求连接转换到透明的TCP/IP通道</li></ul><h2 id="_6-http状态码合集" tabindex="-1"><a class="header-anchor" href="#_6-http状态码合集"><span>6.HTTP状态码合集</span></a></h2><h3 id="临时响应-响应中-1xx" tabindex="-1"><a class="header-anchor" href="#临时响应-响应中-1xx"><span>临时响应（响应中）1xx</span></a></h3><table><thead><tr><th style="text-align:center;">状态码</th><th style="text-align:center;">解释</th></tr></thead><tbody><tr><td style="text-align:center;">100</td><td style="text-align:center;">客户必须继续发出请求</td></tr><tr><td style="text-align:center;">101</td><td style="text-align:center;">客户要求服务器根据请求转换HTTP协议版本</td></tr></tbody></table><h3 id="成功-2xx" tabindex="-1"><a class="header-anchor" href="#成功-2xx"><span>成功 2xx</span></a></h3><table><thead><tr><th style="text-align:center;">状态码</th><th style="text-align:center;">解释</th></tr></thead><tbody><tr><td style="text-align:center;"><span style="background-color:#FFFFCC;">200</span></td><td style="text-align:center;"><span style="background-color:#FFFFCC;">服务器成功返回网页</span></td></tr><tr><td style="text-align:center;">201</td><td style="text-align:center;">（已创建）请求成功并且服务器创建了新的资源</td></tr><tr><td style="text-align:center;">202</td><td style="text-align:center;">（已接受）服务器已接受请求，但尚未处理</td></tr><tr><td style="text-align:center;">203</td><td style="text-align:center;">（非授权信息）返回信息不确定或不完整</td></tr><tr><td style="text-align:center;">204</td><td style="text-align:center;">（无内容）请求收到，但返回信息为空</td></tr><tr><td style="text-align:center;">205</td><td style="text-align:center;">（重置内容）服务器完成了请求，用户代理必须复位当前已经浏览过的文件</td></tr><tr><td style="text-align:center;">206</td><td style="text-align:center;">（部分内容）服务器已经完成了部分用户的GET请求</td></tr></tbody></table><h3 id="重定向-3xx" tabindex="-1"><a class="header-anchor" href="#重定向-3xx"><span>重定向 3xx</span></a></h3><table><thead><tr><th style="text-align:center;">状态码</th><th style="text-align:center;">解释</th></tr></thead><tbody><tr><td style="text-align:center;">300</td><td style="text-align:center;">请求的资源可在多处得到</td></tr><tr><td style="text-align:center;"><span style="background-color:#FFFFCC;">301</span></td><td style="text-align:center;"><span style="background-color:#FFFFCC;">（永久移动）请求的网页已永久移动到新位置</span></td></tr><tr><td style="text-align:center;">302</td><td style="text-align:center;">服务器目前从不同位置的网页响应请求</td></tr><tr><td style="text-align:center;">303</td><td style="text-align:center;">建议客户访问其他URL或访问方式</td></tr><tr><td style="text-align:center;">304</td><td style="text-align:center;">从上次请求后，请求的网页未修改过</td></tr><tr><td style="text-align:center;">305</td><td style="text-align:center;">请求者只能使用代理访问请求的网页</td></tr><tr><td style="text-align:center;">306</td><td style="text-align:center;">前一版本HTTP中使用的代码，现行版本中不再使用</td></tr><tr><td style="text-align:center;">307</td><td style="text-align:center;">服务器目前从不同位置的网页响应请求</td></tr></tbody></table><h3 id="请求错误-4xx" tabindex="-1"><a class="header-anchor" href="#请求错误-4xx"><span>请求错误 4xx</span></a></h3><table><thead><tr><th style="text-align:center;">状态码</th><th style="text-align:center;">解释</th></tr></thead><tbody><tr><td style="text-align:center;"><span style="background-color:#FFFFCC;">400</span></td><td style="text-align:center;"><span style="background-color:#FFFFCC;">错误请求</span></td></tr><tr><td style="text-align:center;"><span style="background-color:#FFFFCC;">401</span></td><td style="text-align:center;"><span style="background-color:#FFFFCC;">请求要求身份验证</span></td></tr><tr><td style="text-align:center;">402</td><td style="text-align:center;">在其他地址发现了请求数据</td></tr><tr><td style="text-align:center;"><span style="background-color:#FFFFCC;">403</span></td><td style="text-align:center;"><span style="background-color:#FFFFCC;">服务器拒绝请求(或跨域)</span></td></tr><tr><td style="text-align:center;"><span style="background-color:#FFFFCC;">404</span></td><td style="text-align:center;"><span style="background-color:#FFFFCC;">服务器找不到请求的网页</span></td></tr><tr><td style="text-align:center;">405</td><td style="text-align:center;">禁用请求中指定的方法</td></tr><tr><td style="text-align:center;">406</td><td style="text-align:center;">无法使用请求的内容特性响应请求的网页</td></tr><tr><td style="text-align:center;">407</td><td style="text-align:center;">请求者应当使用代理</td></tr><tr><td style="text-align:center;">408</td><td style="text-align:center;">服务器等候请求时发生超时</td></tr><tr><td style="text-align:center;">409</td><td style="text-align:center;">服务器在完成请求时发生冲突</td></tr><tr><td style="text-align:center;">410</td><td style="text-align:center;">请求的资源已永久删除</td></tr><tr><td style="text-align:center;">411</td><td style="text-align:center;">不接受不含有效内容长度标头字段的请求</td></tr><tr><td style="text-align:center;">412</td><td style="text-align:center;">未满足请求者在请求中设置的其中一个前提条件</td></tr><tr><td style="text-align:center;">413</td><td style="text-align:center;">无法处理请求，因为请求实体过大</td></tr><tr><td style="text-align:center;">414</td><td style="text-align:center;">请求的 URI（通常为网址）过长</td></tr><tr><td style="text-align:center;">415</td><td style="text-align:center;">请求的格式不受请求页面的支持</td></tr><tr><td style="text-align:center;">416</td><td style="text-align:center;">页面无法提供请求的范围</td></tr><tr><td style="text-align:center;">417</td><td style="text-align:center;">未满足”期望”请求标头字段的要求</td></tr></tbody></table><h3 id="服务器错误-5xx" tabindex="-1"><a class="header-anchor" href="#服务器错误-5xx"><span>服务器错误 5xx</span></a></h3><table><thead><tr><th style="text-align:center;">状态码</th><th style="text-align:center;">解释</th></tr></thead><tbody><tr><td style="text-align:center;"><span style="background-color:#FFFFCC;">500</span></td><td style="text-align:center;"><span style="background-color:#FFFFCC;">服务器遇到错误，无法完成请求</span></td></tr><tr><td style="text-align:center;">501</td><td style="text-align:center;">服务器不具备完成请求的功能</td></tr><tr><td style="text-align:center;">502</td><td style="text-align:center;">（错误网关）从上游服务器收到无效响应</td></tr><tr><td style="text-align:center;">503</td><td style="text-align:center;">服务器目前无法使用（由于超载或停机维护）</td></tr><tr><td style="text-align:center;">504</td><td style="text-align:center;">（网关超时）没有及时从上游服务器收到请求</td></tr><tr><td style="text-align:center;">505</td><td style="text-align:center;">服务器不支持请求中所用的 HTTP 协议版本</td></tr></tbody></table><h2 id="_7-doctype-文档类型-的作用" tabindex="-1"><a class="header-anchor" href="#_7-doctype-文档类型-的作用"><span>7.DOCTYPE (文档类型)的作用</span></a></h2><p>告诉浏览器（解析器）解析文档使用的文档类型定义（HTML,XHTML），必须声明在HTML文档首行</p><h2 id="_8-script标签中defer和async的区别" tabindex="-1"><a class="header-anchor" href="#_8-script标签中defer和async的区别"><span>8.script标签中defer和async的区别</span></a></h2><p>决定了script脚本在网页中的加载顺序，如果没有defer或者async会在载入网页时立即加载</p><p>async属性，文档加载与js加载同时进行 defer属性，js脚本在最后执行</p><p>多个async属性无法保证实际执行顺序，多个defer属性会按照加载顺序执行</p><h2 id="_9-浏览器一次完整的http事务" tabindex="-1"><a class="header-anchor" href="#_9-浏览器一次完整的http事务"><span>9.浏览器一次完整的HTTP事务</span></a></h2><ul><li>浏览器的地址栏输入URL并按下回车</li><li>浏览器查找当前URL是否存在缓存，并比较缓存是否过期</li><li>DNS解析URL对应的IP</li><li>根据IP建立TCP连接（三次握手）</li><li>HTTP发起请求</li><li>服务器处理请求，浏览器接收HTTP响应</li><li>渲染页面，构建DOM树</li><li>关闭TCP连接（四次挥手）</li></ul><h2 id="_10-ssl协议和tls协议" tabindex="-1"><a class="header-anchor" href="#_10-ssl协议和tls协议"><span>10.SSL协议和TLS协议</span></a></h2><p>SSL(安全套接字层Secure Sockets Layer)协议是用于网络通信的加密协议。曾用于HTTPS，现已被TLS代替</p>`,35);function x(y,T){const l=a("ExternalLinkIcon");return r(),d("div",null,[o,p,t("p",null,[e("关于HTML的编码相关知识，详见"),t("a",h,[e("HTML详细教程"),s(l)])]),g])}const b=n(c,[["render",x],["__file","FrontEnd1.html.vue"]]),H=JSON.parse('{"path":"/posts/study/FrontEnd1.html","title":"前端基础知识-HTML","lang":"zh-CN","frontmatter":{"date":"2024-08-14T00:00:00.000Z","category":["学习"],"tag":["面试","HTML","前端"],"star":false,"sticky":false,"sidebar":false,"breadcrumb":false,"footer":39,"description":"前端基础知识-HTML 主要是前端开发的一些基础知识的整理,本部分着重在HTML和HTTP方向 关于HTML的编码相关知识，详见HTML详细教程 1.HTML与XHTML HTML是超文本标记语言（Hyper Text Markup Language）,通过一系列标签统一网络文档格式 XHTML是可扩展超文本标记语言（eXtensible HyperT...","head":[["meta",{"property":"og:url","content":"https://xavoric.github.io/Unisky-Blog/Unisky-Blog/posts/study/FrontEnd1.html"}],["meta",{"property":"og:site_name","content":"宙宇空"}],["meta",{"property":"og:title","content":"前端基础知识-HTML"}],["meta",{"property":"og:description","content":"前端基础知识-HTML 主要是前端开发的一些基础知识的整理,本部分着重在HTML和HTTP方向 关于HTML的编码相关知识，详见HTML详细教程 1.HTML与XHTML HTML是超文本标记语言（Hyper Text Markup Language）,通过一系列标签统一网络文档格式 XHTML是可扩展超文本标记语言（eXtensible HyperT..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-06T08:08:36.000Z"}],["meta",{"property":"article:author","content":"Unisky"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:tag","content":"HTML"}],["meta",{"property":"article:tag","content":"前端"}],["meta",{"property":"article:published_time","content":"2024-08-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-06T08:08:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前端基础知识-HTML\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-06T08:08:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Unisky\\"}]}"]]},"headers":[{"level":2,"title":"1.HTML与XHTML","slug":"_1-html与xhtml","link":"#_1-html与xhtml","children":[]},{"level":2,"title":"2. HTML语义化是什么","slug":"_2-html语义化是什么","link":"#_2-html语义化是什么","children":[]},{"level":2,"title":"3.标签上的 title 与 alt 属性","slug":"_3-标签上的-title-与-alt-属性","link":"#_3-标签上的-title-与-alt-属性","children":[]},{"level":2,"title":"4.优雅降级（Graceful Degradation）与渐进增强（Progressive Enhancement）","slug":"_4-优雅降级-graceful-degradation-与渐进增强-progressive-enhancement","link":"#_4-优雅降级-graceful-degradation-与渐进增强-progressive-enhancement","children":[]},{"level":2,"title":"5.HTTP的请求方法","slug":"_5-http的请求方法","link":"#_5-http的请求方法","children":[]},{"level":2,"title":"6.HTTP状态码合集","slug":"_6-http状态码合集","link":"#_6-http状态码合集","children":[{"level":3,"title":"临时响应（响应中）1xx","slug":"临时响应-响应中-1xx","link":"#临时响应-响应中-1xx","children":[]},{"level":3,"title":"成功 2xx","slug":"成功-2xx","link":"#成功-2xx","children":[]},{"level":3,"title":"重定向 3xx","slug":"重定向-3xx","link":"#重定向-3xx","children":[]},{"level":3,"title":"请求错误 4xx","slug":"请求错误-4xx","link":"#请求错误-4xx","children":[]},{"level":3,"title":"服务器错误 5xx","slug":"服务器错误-5xx","link":"#服务器错误-5xx","children":[]}]},{"level":2,"title":"7.DOCTYPE (文档类型)的作用","slug":"_7-doctype-文档类型-的作用","link":"#_7-doctype-文档类型-的作用","children":[]},{"level":2,"title":"8.script标签中defer和async的区别","slug":"_8-script标签中defer和async的区别","link":"#_8-script标签中defer和async的区别","children":[]},{"level":2,"title":"9.浏览器一次完整的HTTP事务","slug":"_9-浏览器一次完整的http事务","link":"#_9-浏览器一次完整的http事务","children":[]},{"level":2,"title":"10.SSL协议和TLS协议","slug":"_10-ssl协议和tls协议","link":"#_10-ssl协议和tls协议","children":[]}],"git":{"createdTime":1725610116000,"updatedTime":1725610116000,"contributors":[{"name":"Xavoric","email":"3024008334@qq.com","commits":1}]},"readingTime":{"minutes":5.65,"words":1696},"filePathRelative":"posts/study/FrontEnd1.md","localizedDate":"2024年8月14日","excerpt":"\\n<p>主要是前端开发的一些基础知识的整理,本部分着重在HTML和HTTP方向</p>\\n<p>关于HTML的编码相关知识，详见<a href=\\"https://www.w3schools.com/html/default.asp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">HTML详细教程</a></p>\\n<h2>1.HTML与XHTML</h2>\\n<p>HTML是超文本标记语言（Hyper Text Markup Language）,通过一系列标签统一网络文档格式</p>\\n<p>XHTML是可扩展超文本标记语言（eXtensible HyperText Markup Language），基于XML和HTML发展而来的新兴网络设计语言。</p>","autoDesc":true}');export{b as comp,H as data};
