import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o as m,c as i,a,b as s,d as r,e as l}from"./app-DrMrOvds.js";const c={},o=a("h1",{id:"算法小结",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#算法小结"},[a("span",null,"算法小结")])],-1),p=a("p",null,"算法衡量了硬性编码实力，这段时间也是刷了不少题，但是相同类型题的解法都有相似之处，解题思维上更有共同之处，因此在这里开一个新专栏更新算法的相关总结。因为我主要使用的语言是Java，所以涉及到的一些库都源于java.util",-1),h={href:"https://oi-wiki.org/",target:"_blank",rel:"noopener noreferrer"},u=l('<h2 id="_1-算法常见数据结构" tabindex="-1"><a class="header-anchor" href="#_1-算法常见数据结构"><span>1.算法常见数据结构</span></a></h2><ul><li>栈，先进后出 使用继承了Deque父类的ArrayDeque类的<code>add()和peek() poll()</code>方法</li><li>队列，先进先出，使用ArrayDeque类的<code>offer()和peek() poll()</code>方法</li><li>图，二维矩阵<code>int[][]</code>，链表<code>HashMap&lt;Integer,ArrayList&lt;Integer&gt;&gt;</code>，推荐使用链表</li></ul><h2 id="_2-搜索" tabindex="-1"><a class="header-anchor" href="#_2-搜索"><span>2.搜索</span></a></h2><h3 id="常规数组数据-一维、二维" tabindex="-1"><a class="header-anchor" href="#常规数组数据-一维、二维"><span>常规数组数据(一维、二维)</span></a></h3>',4),d=a("ul",null,[a("li",null,[s("一般遍历，按顺序访问每一个数据，复杂度为数组维数，即"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"O"),a("mo",{stretchy:"false"},"("),a("mi",null,"N"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"O(N)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),a("span",{class:"mclose"},")")])])]),s("和"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"O"),a("mo",{stretchy:"false"},"("),a("mi",null,"M"),a("mo",null,"∗"),a("mi",null,"N"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"O(M*N)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"∗"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),a("span",{class:"mclose"},")")])])])]),a("li",null,[s("二分查找，在满足单调性的前提下，确定一个下界"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"m"),a("mi",null,"i"),a("mi",null,"n")]),a("annotation",{encoding:"application/x-tex"},"min")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6595em"}}),a("span",{class:"mord mathnormal"},"min")])])]),s("和上界"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"m"),a("mi",null,"a"),a("mi",null,"x")]),a("annotation",{encoding:"application/x-tex"},"max")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"ma"),a("span",{class:"mord mathnormal"},"x")])])]),s("，取中轴"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"m"),a("mi",null,"i"),a("mi",null,"d"),a("mo",null,"="),a("mfrac",null,[a("mrow",null,[a("mi",null,"m"),a("mi",null,"a"),a("mi",null,"x"),a("mo",null,"+"),a("mi",null,"m"),a("mi",null,"i"),a("mi",null,"n")]),a("mn",null,"2")])]),a("annotation",{encoding:"application/x-tex"},"mid=\\frac{max+min}{2}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"mi"),a("span",{class:"mord mathnormal"},"d"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1.2007em","vertical-align":"-0.345em"}}),a("span",{class:"mord"},[a("span",{class:"mopen nulldelimiter"}),a("span",{class:"mfrac"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.8557em"}},[a("span",{style:{top:"-2.655em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mtight"},"2")])])]),a("span",{style:{top:"-3.23em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),a("span",{style:{top:"-3.394em"}},[a("span",{class:"pstrut",style:{height:"3em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mathnormal mtight"},"ma"),a("span",{class:"mord mathnormal mtight"},"x"),a("span",{class:"mbin mtight"},"+"),a("span",{class:"mord mathnormal mtight"},"min")])])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.345em"}},[a("span")])])])]),a("span",{class:"mclose nulldelimiter"})])])])]),s(",确定"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"m"),a("mi",null,"i"),a("mi",null,"d")]),a("annotation",{encoding:"application/x-tex"},"mid")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"mi"),a("span",{class:"mord mathnormal"},"d")])])]),s("的大小范围，若偏大，则在下一轮设置"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"m"),a("mi",null,"a"),a("mi",null,"x"),a("mo",null,"="),a("mi",null,"m"),a("mi",null,"i"),a("mi",null,"d"),a("mo",null,"−"),a("mn",null,"1")]),a("annotation",{encoding:"application/x-tex"},"max=mid-1")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"ma"),a("span",{class:"mord mathnormal"},"x"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),a("span",{class:"mord mathnormal"},"mi"),a("span",{class:"mord mathnormal"},"d"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"−"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"1")])])]),s("，若偏小则在下一轮设置"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"m"),a("mi",null,"i"),a("mi",null,"n"),a("mo",null,"="),a("mi",null,"m"),a("mi",null,"i"),a("mi",null,"d"),a("mo",null,"+"),a("mn",null,"1")]),a("annotation",{encoding:"application/x-tex"},"min=mid+1")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6595em"}}),a("span",{class:"mord mathnormal"},"min"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},"="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),a("span",{class:"mord mathnormal"},"mi"),a("span",{class:"mord mathnormal"},"d"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"+"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"1")])])]),s("。直到"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"m"),a("mi",null,"i"),a("mi",null,"n"),a("mo",null,">"),a("mo",null,"="),a("mi",null,"m"),a("mi",null,"a"),a("mi",null,"x")]),a("annotation",{encoding:"application/x-tex"},"min>=max")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6986em","vertical-align":"-0.0391em"}}),a("span",{class:"mord mathnormal"},"min"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},">="),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"ma"),a("span",{class:"mord mathnormal"},"x")])])]),s("为止，此时汇合的位置则为搜索结果。 二分查找的复杂度为"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"O"),a("mo",{stretchy:"false"},"("),a("mi",null,"l"),a("mi",null,"o"),a("mi",null,"g"),a("mi",null,"N"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"O(logN)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),a("span",{class:"mord mathnormal"},"o"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),a("span",{class:"mclose"},")")])])])])],-1),g=a("h2",{id:"_3-前缀和",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_3-前缀和"},[a("span",null,"3.前缀和")])],-1),x=a("p",null,[s("前缀和是指数组前i项数据之和，或者类似的概念。 相当于是数列与前i项和之间的关系。 因此可以得到"),a("code",null,"prefixSum[i]=prefixum[i-1]+num[i]"),s(" 前缀和可以应用于求数组任意连续项之和 例如"),a("code",null,"num[1...3]=prefixSum[3]-prefixSum[0]=prefixSum[3]-prefixSum[1]+num[1]")],-1),y=a("h2",{id:"_4-排序",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_4-排序"},[a("span",null,"4.排序")])],-1),w=a("p",null,[s("注意，默认为对一维数组进行排序，数组长度为"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"n")]),a("annotation",{encoding:"application/x-tex"},"n")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"n")])])]),s("。 "),a("strong",null,"稳定"),s("表示排序前后相同值的元素顺序一定不发生改变 默认排序规则为升序排序")],-1),k=a("ul",null,[a("li",null,[s("选择排序：按顺序找出第"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"i")]),a("annotation",{encoding:"application/x-tex"},"i")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6595em"}}),a("span",{class:"mord mathnormal"},"i")])])]),s("小的元素，放到第"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"i")]),a("annotation",{encoding:"application/x-tex"},"i")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6595em"}}),a("span",{class:"mord mathnormal"},"i")])])]),s("个位置上（交换），不稳定")]),a("li",null,[a("strong",null,"冒泡排序"),s("：从第一个元素开始，逐次向后比较相邻元素大小，若前者大于后者则进行交换，遍历"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"n")]),a("annotation",{encoding:"application/x-tex"},"n")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"n")])])]),s("次，对于第"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"i")]),a("annotation",{encoding:"application/x-tex"},"i")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6595em"}}),a("span",{class:"mord mathnormal"},"i")])])]),s("次遍历，末尾"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"i")]),a("annotation",{encoding:"application/x-tex"},"i")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6595em"}}),a("span",{class:"mord mathnormal"},"i")])])]),s("个元素一定是前"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"i")]),a("annotation",{encoding:"application/x-tex"},"i")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6595em"}}),a("span",{class:"mord mathnormal"},"i")])])]),s("大的，稳定")]),a("li",null,[a("strong",null,"插入排序"),s("：将数组分为未排序和已排序两部分，将未排序部分的元素逐个插入到已排序的部分，稳定")]),a("li",null,[a("strong",null,"快速排序"),s("：选择一个基准数，双向遍历数组，令数组左边元素全部小于基准数，右边元素全部大于基准数，然后对两侧分别进行快速排序，稳定，平均复杂度为"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"O"),a("mo",{stretchy:"false"},"("),a("mi",null,"N"),a("mi",null,"l"),a("mi",null,"o"),a("mi",null,"g"),a("mi",null,"N"),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"O(NlogN)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"Nl"),a("span",{class:"mord mathnormal"},"o"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),a("span",{class:"mclose"},")")])])]),s("，最坏情况会退化为"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"O"),a("mo",{stretchy:"false"},"("),a("msup",null,[a("mi",null,"N"),a("mn",null,"2")]),a("mo",{stretchy:"false"},")")]),a("annotation",{encoding:"application/x-tex"},"O(N^2)")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),a("span",{class:"mopen"},"("),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.8141em"}},[a("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"2")])])])])])])]),a("span",{class:"mclose"},")")])])])]),a("li",null,"归并排序"),a("li",null,"堆排序")],-1),_=l('<h2 id="_3-动态规划" tabindex="-1"><a class="header-anchor" href="#_3-动态规划"><span>3.动态规划</span></a></h2><p>dp数组用于储存动态规划过程中的状态</p><h2 id="_4-贪心" tabindex="-1"><a class="header-anchor" href="#_4-贪心"><span>4.贪心</span></a></h2><h2 id="_5-图论dfs与bfs" tabindex="-1"><a class="header-anchor" href="#_5-图论dfs与bfs"><span>5.图论DFS与BFS</span></a></h2><h2 id="_6-树论" tabindex="-1"><a class="header-anchor" href="#_6-树论"><span>6.树论</span></a></h2><h2 id="_8-记忆化" tabindex="-1"><a class="header-anchor" href="#_8-记忆化"><span>8.记忆化</span></a></h2><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h2>',7);function f(M,b){const t=e("ExternalLinkIcon");return m(),i("div",null,[o,p,a("p",null,[s("算法的学习过程一定程度上参考了oi的学习方向，详见"),a("a",h,[s("OI中文wiki"),r(t)])]),u,d,g,x,y,w,k,_])}const L=n(c,[["render",f],["__file","Algorithm.html.vue"]]),O=JSON.parse('{"path":"/posts/study/Algorithm.html","title":"算法小结","lang":"zh-CN","frontmatter":{"date":"2024-08-26T00:00:00.000Z","category":["学习"],"tag":["面试","算法"],"star":false,"sticky":false,"sidebar":false,"breadcrumb":false,"footer":"Shine on you.","article":false,"description":"算法小结 算法衡量了硬性编码实力，这段时间也是刷了不少题，但是相同类型题的解法都有相似之处，解题思维上更有共同之处，因此在这里开一个新专栏更新算法的相关总结。因为我主要使用的语言是Java，所以涉及到的一些库都源于java.util 算法的学习过程一定程度上参考了oi的学习方向，详见OI中文wiki 1.算法常见数据结构 栈，先进后出 使用继承了Deq...","head":[["meta",{"property":"og:url","content":"https://xavoric.github.io/Unisky-Blog/Unisky-Blog/posts/study/Algorithm.html"}],["meta",{"property":"og:site_name","content":"宙宇空"}],["meta",{"property":"og:title","content":"算法小结"}],["meta",{"property":"og:description","content":"算法小结 算法衡量了硬性编码实力，这段时间也是刷了不少题，但是相同类型题的解法都有相似之处，解题思维上更有共同之处，因此在这里开一个新专栏更新算法的相关总结。因为我主要使用的语言是Java，所以涉及到的一些库都源于java.util 算法的学习过程一定程度上参考了oi的学习方向，详见OI中文wiki 1.算法常见数据结构 栈，先进后出 使用继承了Deq..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-06T08:08:36.000Z"}],["meta",{"property":"article:author","content":"Unisky"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2024-08-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-06T08:08:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"算法小结\\",\\"description\\":\\"算法小结 算法衡量了硬性编码实力，这段时间也是刷了不少题，但是相同类型题的解法都有相似之处，解题思维上更有共同之处，因此在这里开一个新专栏更新算法的相关总结。因为我主要使用的语言是Java，所以涉及到的一些库都源于java.util 算法的学习过程一定程度上参考了oi的学习方向，详见OI中文wiki 1.算法常见数据结构 栈，先进后出 使用继承了Deq...\\"}"]]},"headers":[{"level":2,"title":"1.算法常见数据结构","slug":"_1-算法常见数据结构","link":"#_1-算法常见数据结构","children":[]},{"level":2,"title":"2.搜索","slug":"_2-搜索","link":"#_2-搜索","children":[{"level":3,"title":"常规数组数据(一维、二维)","slug":"常规数组数据-一维、二维","link":"#常规数组数据-一维、二维","children":[]}]},{"level":2,"title":"3.前缀和","slug":"_3-前缀和","link":"#_3-前缀和","children":[]},{"level":2,"title":"4.排序","slug":"_4-排序","link":"#_4-排序","children":[]},{"level":2,"title":"3.动态规划","slug":"_3-动态规划","link":"#_3-动态规划","children":[]},{"level":2,"title":"4.贪心","slug":"_4-贪心","link":"#_4-贪心","children":[]},{"level":2,"title":"5.图论DFS与BFS","slug":"_5-图论dfs与bfs","link":"#_5-图论dfs与bfs","children":[]},{"level":2,"title":"6.树论","slug":"_6-树论","link":"#_6-树论","children":[]},{"level":2,"title":"8.记忆化","slug":"_8-记忆化","link":"#_8-记忆化","children":[]},{"level":2,"title":"","slug":"","link":"#","children":[]}],"git":{"createdTime":1725610116000,"updatedTime":1725610116000,"contributors":[{"name":"Xavoric","email":"3024008334@qq.com","commits":1}]},"readingTime":{"minutes":2.53,"words":760},"filePathRelative":"posts/study/Algorithm.md","localizedDate":"2024年8月26日","excerpt":"\\n<p>算法衡量了硬性编码实力，这段时间也是刷了不少题，但是相同类型题的解法都有相似之处，解题思维上更有共同之处，因此在这里开一个新专栏更新算法的相关总结。因为我主要使用的语言是Java，所以涉及到的一些库都源于java.util</p>\\n<p>算法的学习过程一定程度上参考了oi的学习方向，详见<a href=\\"https://oi-wiki.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">OI中文wiki</a></p>\\n<h2>1.算法常见数据结构</h2>\\n<ul>\\n<li>栈，先进后出 使用继承了Deque父类的ArrayDeque类的<code>add()和peek() poll()</code>方法</li>\\n<li>队列，先进先出，使用ArrayDeque类的<code>offer()和peek() poll()</code>方法</li>\\n<li>图，二维矩阵<code>int[][]</code>，链表<code>HashMap&lt;Integer,ArrayList&lt;Integer&gt;&gt;</code>，推荐使用链表</li>\\n</ul>","autoDesc":true}');export{L as comp,O as data};
